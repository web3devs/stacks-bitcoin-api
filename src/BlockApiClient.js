import { BlocksApi, Configuration } from "@stacks/blockchain-api-client";
const { NETWORK } = process.env;
const config = new Configuration({ basePath: `https://stacks-node-api.${NETWORK}.stacks.co` });
const blocksApi = new BlocksApi(config);
export async function getStxBlockHeight(bitcoinBlockHeight) {
    let limit = 30;
    let offset = 0;
    const firstResponse = await blocksApi.getBlockList({ offset, limit });
    let stxBlock = firstResponse.results.find(b => b.burn_block_height === bitcoinBlockHeight);
    offset += Math.max(limit, firstResponse.results[0].burn_block_height - bitcoinBlockHeight);
    while (!stxBlock) {
        const blockListResponse = await blocksApi.getBlockList({ offset, limit });
        const blocks = blockListResponse.results;
        stxBlock = blocks.find(b => b.burn_block_height === bitcoinBlockHeight);
        offset -= limit;
        if (offset < 0 || blocks[blocks.length - 1].burn_block_height > bitcoinBlockHeight)
            return undefined;
    }
    return stxBlock.height;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQmxvY2tBcGlDbGllbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJCbG9ja0FwaUNsaWVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLGFBQWEsRUFBQyxNQUFNLCtCQUErQixDQUFDO0FBRXZFLE1BQU0sRUFBRSxPQUFPLEVBQUUsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFBO0FBRS9CLE1BQU0sTUFBTSxHQUFHLElBQUksYUFBYSxDQUFDLEVBQUMsUUFBUSxFQUFFLDJCQUEyQixPQUFPLFlBQVksRUFBQyxDQUFDLENBQUE7QUFDNUYsTUFBTSxTQUFTLEdBQUcsSUFBSSxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUE7QUFFdkMsTUFBTSxDQUFDLEtBQUssVUFBVSxpQkFBaUIsQ0FBQyxrQkFBMEI7SUFDOUQsSUFBSSxLQUFLLEdBQUcsRUFBRSxDQUFDO0lBQ2YsSUFBSSxNQUFNLEdBQUcsQ0FBQyxDQUFDO0lBQ2YsTUFBTSxhQUFhLEdBQUcsTUFBTSxTQUFTLENBQUMsWUFBWSxDQUFDLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUM7SUFDdEUsSUFBSSxRQUFRLEdBQUcsYUFBYSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsaUJBQWlCLEtBQUssa0JBQWtCLENBQUMsQ0FBQztJQUMzRixNQUFNLElBQUksSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLEVBQUUsYUFBYSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxpQkFBaUIsR0FBRyxrQkFBa0IsQ0FBQyxDQUFDO0lBQzNGLE9BQU8sQ0FBQyxRQUFRLEVBQUU7UUFDZCxNQUFNLGlCQUFpQixHQUFHLE1BQU0sU0FBUyxDQUFDLFlBQVksQ0FBQyxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDO1FBQzFFLE1BQU0sTUFBTSxHQUFHLGlCQUFpQixDQUFDLE9BQU8sQ0FBQztRQUN6QyxRQUFRLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxpQkFBaUIsS0FBSyxrQkFBa0IsQ0FBQyxDQUFDO1FBQ3hFLE1BQU0sSUFBSSxLQUFLLENBQUM7UUFDaEIsSUFBSSxNQUFNLEdBQUcsQ0FBQyxJQUFJLE1BQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLGlCQUFpQixHQUFHLGtCQUFrQjtZQUM5RSxPQUFPLFNBQVMsQ0FBQztLQUN4QjtJQUNELE9BQU8sUUFBUSxDQUFDLE1BQU0sQ0FBQztBQUMzQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtCbG9ja3NBcGksIENvbmZpZ3VyYXRpb259IGZyb20gXCJAc3RhY2tzL2Jsb2NrY2hhaW4tYXBpLWNsaWVudFwiO1xuXG5jb25zdCB7IE5FVFdPUksgfSA9IHByb2Nlc3MuZW52XG5cbmNvbnN0IGNvbmZpZyA9IG5ldyBDb25maWd1cmF0aW9uKHtiYXNlUGF0aDogYGh0dHBzOi8vc3RhY2tzLW5vZGUtYXBpLiR7TkVUV09SS30uc3RhY2tzLmNvYH0pXG5jb25zdCBibG9ja3NBcGkgPSBuZXcgQmxvY2tzQXBpKGNvbmZpZylcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFN0eEJsb2NrSGVpZ2h0KGJpdGNvaW5CbG9ja0hlaWdodDogbnVtYmVyKTogUHJvbWlzZTxudW1iZXIgfCB1bmRlZmluZWQ+IHtcbiAgICBsZXQgbGltaXQgPSAzMDtcbiAgICBsZXQgb2Zmc2V0ID0gMDtcbiAgICBjb25zdCBmaXJzdFJlc3BvbnNlID0gYXdhaXQgYmxvY2tzQXBpLmdldEJsb2NrTGlzdCh7IG9mZnNldCwgbGltaXQgfSk7XG4gICAgbGV0IHN0eEJsb2NrID0gZmlyc3RSZXNwb25zZS5yZXN1bHRzLmZpbmQoYiA9PiBiLmJ1cm5fYmxvY2tfaGVpZ2h0ID09PSBiaXRjb2luQmxvY2tIZWlnaHQpO1xuICAgIG9mZnNldCArPSBNYXRoLm1heChsaW1pdCwgZmlyc3RSZXNwb25zZS5yZXN1bHRzWzBdLmJ1cm5fYmxvY2tfaGVpZ2h0IC0gYml0Y29pbkJsb2NrSGVpZ2h0KTtcbiAgICB3aGlsZSAoIXN0eEJsb2NrKSB7XG4gICAgICAgIGNvbnN0IGJsb2NrTGlzdFJlc3BvbnNlID0gYXdhaXQgYmxvY2tzQXBpLmdldEJsb2NrTGlzdCh7IG9mZnNldCwgbGltaXQgfSk7XG4gICAgICAgIGNvbnN0IGJsb2NrcyA9IGJsb2NrTGlzdFJlc3BvbnNlLnJlc3VsdHM7XG4gICAgICAgIHN0eEJsb2NrID0gYmxvY2tzLmZpbmQoYiA9PiBiLmJ1cm5fYmxvY2tfaGVpZ2h0ID09PSBiaXRjb2luQmxvY2tIZWlnaHQpO1xuICAgICAgICBvZmZzZXQgLT0gbGltaXQ7XG4gICAgICAgIGlmIChvZmZzZXQgPCAwIHx8IGJsb2Nrc1tibG9ja3MubGVuZ3RoIC0gMV0uYnVybl9ibG9ja19oZWlnaHQgPiBiaXRjb2luQmxvY2tIZWlnaHQpXG4gICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICByZXR1cm4gc3R4QmxvY2suaGVpZ2h0O1xufVxuXG4iXX0=